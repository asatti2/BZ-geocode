<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ops</groupId>
  <artifactId>oneapplication</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>ops Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <properties>
    <org.springframework.version>4.2.1.RELEASE</org.springframework.version>
    <spring.security.version>4.0.2.RELEASE</spring.security.version>
    <junit.version>4.11</junit.version>
    <mockito.version>1.9.5</mockito.version>
    <javax.servlet.version>2.5</javax.servlet.version>
    <javax.validation.version>1.1.0.Final</javax.validation.version>
    <spring.oxm.version>3.0.5.RELEASE</spring.oxm.version>
    <spring.test.version>4.0.5.RELEASE</spring.test.version>
    <spring.security.version>3.2.5.RELEASE</spring.security.version>
    <spring.security.oauth2.version>2.0.1.RELEASE</spring.security.oauth2.version>
    <google.gson.version>2.2.2</google.gson.version>
    <commons.httpclient.version>3.1</commons.httpclient.version>
    <hibernate.core.version>5.0.3.Final</hibernate.core.version>
    <hibernate.validator.version>5.2.2.Final</hibernate.validator.version>
    <slf4j.version>1.7.7</slf4j.version>
    <logback.version>1.1.2</logback.version>
    <log4jdbc.version>1.2</log4jdbc.version>
    <jackson.version>2.4.3</jackson.version>
    <mysql.version>5.1.25</mysql.version>
    <commons.io.version>2.4</commons.io.version>
    <javax.mail.version>1.4.7</javax.mail.version>
    <common.lang3.version>3.4</common.lang3.version>
    <javax.servlet.api.version>3.0.1</javax.servlet.api.version>
    <json.path.version>0.8.1</json.path.version>
    <hamcrest.version>1.3</hamcrest.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>
  
  <dependencies>
    
    <!-- JUnit Dependencies -->
    
	<dependency>
    <groupId>org.hamcrest</groupId>
    <artifactId>hamcrest-all</artifactId>
    <version>${hamcrest.version}</version>
    <scope>test</scope>
	</dependency>
	<dependency>
	    <groupId>junit</groupId>
	    <artifactId>junit</artifactId>
	    <version>${junit.version}</version>
	    <scope>test</scope>
	    <exclusions>
	        <exclusion>
	            <artifactId>hamcrest-core</artifactId>
	            <groupId>org.hamcrest</groupId>
	        </exclusion>
	    </exclusions>
	</dependency>
	<dependency>
	    <groupId>org.mockito</groupId>
	    <artifactId>mockito-core</artifactId>
	    <version>${mockito.version}</version>
	    <scope>test</scope>
	</dependency>
	<dependency>
	    <groupId>com.jayway.jsonpath</groupId>
	    <artifactId>json-path</artifactId>
	    <version>${json.path.version}</version>
	    <scope>test</scope>
	</dependency>
	<dependency>
	    <groupId>com.jayway.jsonpath</groupId>
	    <artifactId>json-path-assert</artifactId>
	    <version>${json.path.version}</version>
	    <scope>test</scope>
	</dependency>
	<dependency>
		<groupId>org.json</groupId>
		<artifactId>json</artifactId>
		<version>20140107</version>
	</dependency>
	
    
    <!-- Servlet Dependencies -->
    
	    <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet.api.version}</version>
       </dependency>   
       
								       <dependency>
									<groupId>javax.ws.rs</groupId>
									<artifactId>jsr311-api</artifactId>
									<version>1.1.1</version>
								</dependency>
       
								       <dependency>
									<groupId>com.sun.jersey</groupId>
									<artifactId>jersey-bundle</artifactId>
									<version>1.19</version>
								</dependency>
       
		
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax.validation.version}</version>
		</dependency>
    
    <!-- Spring Dependencies -->
    
	    <!-- Core utilities used by other modules. Define this if you use Spring 
	        Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-core</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Expression Language (depends on spring-core) Define this if you use 
	        Spring Expression APIs (org.springframework.expression.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-expression</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
	        this if you use Spring Bean APIs (org.springframework.beans.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-beans</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
	        spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-aop</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
	        spring-beans) This is the central artifact for Spring's Dependency Injection 
	        Container and is generally always defined -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-context</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Various Application Context utilities, including EhCache, JavaMail, 
	        Quartz, and Freemarker integration Define this if you need any of these integrations -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-context-support</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
	        spring-aop, spring-context) Define this if you use Spring Transactions or 
	        DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-tx</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
	        spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-jdbc</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
	        and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
	        Define this if you need ORM (org.springframework.orm.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-orm</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
	        JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
	        spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-oxm</artifactId>
	        <version>${spring.oxm.version}</version>
	    </dependency>

	    <!-- Web application development utilities applicable to both Servlet and 
	        Portlet Environments (depends on spring-core, spring-beans, spring-context) 
	        Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
	        web framework with Spring (org.springframework.web.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-web</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
	        spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
	        Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-webmvc</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

	    <!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
	        spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
	        Container (org.springframework.web.portlet.*) -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-webmvc-portlet</artifactId>
	        <version>${org.springframework.version}</version>
	    </dependency>

    	<!-- Support for testing Spring applications with tools such as JUnit and 
        	TestNG This artifact is generally always defined with a 'test' scope for 
        	the integration testing framework and unit testing stubs -->
	    <dependency>
	        <groupId>org.springframework</groupId>
	        <artifactId>spring-test</artifactId>
	        <version>${spring.test.version}</version>
	        <scope>test</scope>
	    </dependency>	    
	 		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>${spring.security.oauth2.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${google.gson.version}</version>
		</dependency>
		
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>${commons.httpclient.version}</version>
		</dependency>
	     
		
		<!-- Logging Dependencies -->
		
			<!-- slf4j -->
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
					<version>${slf4j.version}</version>
				</dependency>				
			
			<!-- logback -->
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
					<version>${logback.version}</version>
				</dependency>
			
			<!-- log4jdbc -->
				<dependency>
					<groupId>com.googlecode.log4jdbc</groupId>
					<artifactId>log4jdbc</artifactId>
					<version>${log4jdbc.version}</version>
					<scope>runtime</scope>
				</dependency>
				
		<!-- Jackson JSON Mapper -->
		
			 <dependency>
        		<groupId>com.fasterxml.jackson.core</groupId>
        		<artifactId>jackson-core</artifactId>
        		<version>${jackson.version}</version>
    		</dependency>
			
    		<dependency>
        		<groupId>com.fasterxml.jackson.core</groupId>
        		<artifactId>jackson-databind</artifactId>
        		<version>${jackson.version}</version>
    		</dependency>
			
		<!-- Java Mail Dependencies -->
		
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax.mail.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.commons</groupId>
	  			<artifactId>commons-lang3</artifactId>
	  			<version>${common.lang3.version}</version>
  			</dependency>
  </dependencies>

  <build>
    <finalName>ops</finalName>
  </build>
</project>

